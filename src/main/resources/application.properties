# Info
info.application.name=@project.name@
info.application.artifactId=@project.artifactId@
info.application.version=@project.version@
info.application.description=@project.description@
info.properties.environment=${ENV:local}
# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.jmx.exposure.include=health,info
management.info.env.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
# Openapi
springdoc.writer-with-order-by-keys=true
springdoc.writer-with-default-pretty-printer=true
# Server
server.servlet.context-path=${CONTEXT_PATH:/}
server.port=8080
server.shutdown=GRACEFUL
# Logging
logging.level.root=${DEFAULT_LOGGING_LEVEL:INFO}
logging.level.it.gov.pagopa=${APP_LOGGING_LEVEL:INFO}
# CORS configuration
cors.configuration=${CORS_CONFIGURATION:{"origins": ["*"], "methods": ["*"]}}
# JPA settings
spring.jpa.database-platform=${SPRING_JPA_DB_PLATFORM}
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.hibernate.ddl-auto=none
# https://github.com/spring-projects/spring-boot/issues/12007#issuecomment-369388646
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.default_schema=${DATABASE_SCHEMA}
spring.jpa.open-in-view=false
# Batches (cron expression refers to UTC timezones)
cron.job.schedule.enabled=${CRONJOB_SCHEDULE_ENABLED:true}
# Nodo's oracle db config
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER}
healthcheck.query=${HEALTHCHECK_QUERY:select 1 from DUAL}
# Cosmos DB config
azure.cosmos.uri=${COSMOS_DB_URI}
azure.cosmos.key=${COSMOS_DB_PRIMARY_KEY}
azure.cosmos.database=${COSMOS_DB_NAME}
azure.cosmos.populate-query-metrics=${COSMOS_QUERY_METRICS:false}
azure.cosmos.read.region=${COSMOS_READ_REGION:North EU}
azure.cosmos.biz-events-container-name=${COSMOS_DB_CONTAINER_NAME}
# EventHub config - Producer-side
azure.event-hub.connection-string=${EVENTHUB_PRODUCER_CONNECTION_STRING}
azure.event-hub.producer.name=${EVENTHUB_PRODUCER_NAME}
# Client config - eCommerce HelpDesk
client.ecommerce-helpdesk.subscription-key=${CLIENT_ECOMMERCE_HELPDESK_SUBKEY}
client.ecommerce-helpdesk.host=${CLIENT_ECOMMERCE_HELPDESK_HOST}
client.ecommerce-helpdesk.search-transaction.path=${CLIENT_ECOMMERCE_HELPDESK_SEARCHTRANSACTION_PATH}
client.ecommerce-helpdesk.retry.max-attempts=${CLIENT_ECOMMERCE_HELPDESK_MAXATTEMPTS:1}
client.ecommerce-helpdesk.retry.max-delay=${CLIENT_ECOMMERCE_HELPDESK_MAXDELAY:5000}
# Client config - APIConfig Cache
client.apiconfig-cache.subscription-key=${CLIENT_APICONFIG_CACHE_SUBKEY}
client.apiconfig-cache.host=${CLIENT_APICONFIG_CACHE_HOST}
client.apiconfig-cache.get-cache-by-keys.path=${CLIENT_APICONFIG_CACHE_GETCACHEBYKEYS_PATH}
client.apiconfig-cache.get-cache-latest-version.path=${CLIENT_APICONFIG_CACHE_GETCACHELATESTVERSION_PATH}
client.apiconfig-cache.retry.max-attempts=${CLIENT_APICONFIG_CACHE_MAXATTEMPTS:1}
client.apiconfig-cache.retry.max-delay=${CLIENT_APICONFIG_CACHE_MAXDELAY:5000}
# Cron Job config - Config data loading
config-data-loader.schedule.expression=${CACHE_READ_JOB_SCHEDULE:0 0 */12 * * *}
# Cron Job config - Synchronization process
synchronization-process.schedule.expression=${SYNCHRONIZATION_JOB_SCHEDULE:0 0 2 * * *}
synchronization-process.lower-bound-date.before-days=${SYNCHRONIZATION_JOB_LOWER_BOUND_DATE_BEFORE_DAYS:2}
synchronization-process.send-to-eventhub.activation=${SYNCHRONIZATION_JOB_SEND_TO_EVENTHUB:false}
# Client config - Default values
feign.client.config.default.connect-timeout=${CLIENT_CONNECTION_TIMEOUT:10000}
feign.client.config.default.read-timeout=${CLIENT_CONNECTION_TIMEOUT:10000}