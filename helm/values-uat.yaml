microservice-chart: &microservice-chart
  namespace: "bizevents"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: ghcr.io/pagopa/pagopa-biz-events-sync-nodo
    tag: "0.1.0-2-fix-first-run"
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080
  ingress: &ingress
    create: true
    host: "weuuat.bizevents.internal.uat.platform.pagopa.it"
    path: /pagopa-biz-events-sync-nodo/(.*)
    servicePort: 8080
  serviceAccount:
    name: "bizevents-workload-identity"
  azure:
    workloadIdentityClientId: <workload-identity-client-id-set-automatically-by-gha>
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - all
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.25"
    limits:
      memory: "756Mi"
      cpu: "0.50"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 1
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "75"
  envConfig:
    APP_ENVIRONMENT: "uat"
    WEBSITE_SITE_NAME: 'pagopabizeventssyncnodo' # required to show cloud role name in application insights
    ENV: 'azure-uat'
    APP_LOGGING_LEVEL: 'DEBUG'
    DEFAULT_LOGGING_LEVEL: 'INFO'
    CACHE_READ_JOB_SCHEDULE: '0 0 */12 * * *'
    CLIENT_APICONFIG_CACHE_GETCACHEBYKEYS_PATH: 'api-config-cache/p/v1/cache'
    CLIENT_APICONFIG_CACHE_GETCACHELATESTVERSION_PATH: 'api-config-cache/p/v1/cache/id'
    CLIENT_APICONFIG_CACHE_HOST: 'https://api.uat.platform.pagopa.it'
    CLIENT_CONNECTION_TIMEOUT: '10000'
    CLIENT_ECOMMERCE_HELPDESK_HOST: 'https://api.uat.platform.pagopa.it'
    CLIENT_ECOMMERCE_HELPDESK_MAXDELAY: '5000'
    CLIENT_ECOMMERCE_HELPDESK_SEARCHTRANSACTION_PATH: 'ecommerce/helpdesk-service/v2/ecommerce/searchTransaction'
    COSMOS_DB_CONTAINER_NAME: 'biz-events'
    COSMOS_DB_NAME: 'db'
    COSMOS_DB_URI: 'https://pagopa-u-weu-bizevents-ds-cosmos-account.documents.azure.com:443/'
    COSMOS_QUERY_METRICS: 'false'
    COSMOS_READ_REGION: 'North EU'
    CRONJOB_SCHEDULE_ENABLED: 'false'
    DATABASE_SCHEMA: 'NODO_ONLINE'
    EVENTHUB_PRODUCER_NAME: 'nodo-dei-pagamenti-biz-evt'
    SPRING_DATASOURCE_DRIVER: 'oracle.jdbc.OracleDriver'
    SPRING_DATASOURCE_URL: "jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=BROKEN)(ADDRESS=(PROTOCOL=tcp)(PORT=1521)(HOST=db-nodo-pagamenti.u.db-nodo-pagamenti.com))(CONNECT_DATA=(SERVICE_NAME=PAGOPA_READ))(SO_KEEPALIVE=true)(TCP_KEEPIDLE=60)(TCP_KEEPINTVL=30)(TCP_KEEPCNT=15))"
    SPRING_DATASOURCE_USERNAME: 'PAGOPA_READER'
    SPRING_JPA_DB_PLATFORM: 'org.hibernate.dialect.Oracle12cDialect'
    SYNCHRONIZATION_JOB_LOWER_BOUND_DATE_BEFORE_DAYS: '2'
    SYNCHRONIZATION_JOB_SCHEDULE: '0 0 2 * * *'
    SYNCHRONIZATION_JOB_SEND_TO_EVENTHUB: 'false'
  envSecret: &envSecret
    # required
    APPLICATIONINSIGHTS_CONNECTION_STRING: 'ai-u-connection-string'
    CLIENT_APICONFIG_CACHE_SUBKEY: 'api-config-cache-subscription-key'
    CLIENT_ECOMMERCE_HELPDESK_SUBKEY: 'ecommerce-helpdesk-subscription-key'
    COSMOS_DB_PRIMARY_KEY: 'cosmos-u-biz-key'
    EVENTHUB_PRODUCER_CONNECTION_STRING: 'ehub-u-biz-connection-string'
    SPRING_DATASOURCE_PASSWORD: 'nodo-oracle-db-password'
  keyvault:
    name: "pagopa-u-bizevents-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: {}
  tolerations: []
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - "user"
  canaryDelivery:
    create: false
    deployment:
      create: false
